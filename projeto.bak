% --- Groups and frame --- %
group answer 'Yes', 'No'.
group platform 'Playstation 4', 'Nintendo Switch', 'PC', 'Mobile'.
group provider 'Steam', 'Origin', 'Epic Games'.

frame game
	default name is ''.

% --- Game's instances declaration --- %
instance spider_man is a game
	name is 'Spider-Man'.

instance god_of_war is a game
	name is 'God Of War'.

instance until_dawn is a game
	name is 'Until Dawn'.

instance tetris_effect is a game
	name is 'Tetris Effect'.

instance shadow_of_colossus is a game
	name is 'Shadow of Colossus'.

instance captain_toad is a game
	name is 'Captain Toad'.

instance fire_emblem is a game
	name is 'Fire Emblem'.

instance horizon_zero_dawn is a game
	name is 'Horizon: Zero Dawn'.

instance grand_turismo is a game
	name is 'Grand Turismo'.

instance fifa is a game
	name is 'FIFA'.

instance legend_of_zelda is a game
	name is 'Legend Of Zelda'.

instance mario_rabbids is a game
	name is 'Mario + Rabbids: Kingdom Battle'.

instance pokemon is a game
	name is 'Pokemon'.

instance mario_kart is a game
	name is 'Mario Kart'.

instance super_smash_brothers is a game
	name is 'Super Smash Brothers'.

instance pokken_tournament is a game
	name is 'Pokkén Tournament'.

instance mario_tennis is a game
	name is 'Mario Tennis Aces'.

instance pokemon_go is a game
	name is 'Pokemon Go'.

instance minecraft_earth is a game
	name is 'Minecraft Earth'.

instance minecraft is a game
	name is 'Minecraft'.

instance skyrim is a game
	name is 'Skyrim'.

instance gta is a game
	name is 'GTA'.

instance clash_royale is a game
	name is 'Clash Royale'.

instance asphalt is a game
	name is 'Asphalt'.

instance real_racing is a game
	name is 'Real Racing'.

instance counter_strike is a game
	name is 'Counter Strike'.

instance team_fortress is a game
	name is 'Team Fortress'.

instance left4dead is a game
	name is 'Left 4 Dead'.

instance portal is a game
	name is 'Portal'.

instance dota is a game
	name is 'DOTA 2'.

instance smite is a game
	name is 'Smite'.

instance battlefield is a game
	name is 'Battlefield'.

instance star_wars_battlefront is a game
	name is 'Star Wars: Battlefront'.

instance the_sims is a game
	name is 'The Sims'.

instance dragon_age is a game
	name is 'Dragon Age'.

instance command_conquer is a game
	name is 'Command and Conquer'.

instance fortnite is a game
	name is 'Fortnite'.

instance lol is a game
	name is 'League Of Legends'.

instance starcraft is a game
	name is 'Starcraft'.

instance civilization is a game
	name is 'Civilization'.

instance minecraft is a game
	name is 'Minecraft'.

instance terraria is a game
	name is 'Terraria'.

instance gta is a game
	name is 'Grand Theft Auto'.

instance nba_2k_20 is a game
	name is 'NBA2K20'.

instance rocket_league is a game
	name is 'Rocket League'.

instance golf_story is a game
	name is 'Golf Story'.

instance dark_souls is a game
	name is 'Dark Souls'.

instance medi_evil is a game
	name is 'MediEvil'.

instance resident_evil is a game
	name is 'Resident Evil'.

instance days_gone is a game
	name is 'Days Gone'.

instance journey is a game
	name is 'Journey'.

instance extinction is a game
	name is 'Extinction'.

instance uncharted is a game
	name is 'Uncharted'.

instance assetto_corsa is a game
	name is 'Assetto Corsa'.

instance uncharted is a game
	name is 'Project Cars'.

instance pes is a game
	name is 'Pro Evolution Soccer'.

instance mario_odyssey is a game
	name is 'Mario Odyssey'.

instance mario_maker is a game
	name is 'Super Mario Maker'.

instance table_top is a game
	name is 'Table Top Racing'.

instance mario_sonic is a game
	name is 'Mario & Sonic at the Olympics'.

instance metro_exodus is a game
	name is 'Metro Exodus'.

instance killing_floor is a game
	name is 'Killing Floor'.

instance rainbow_six is a game
	name is 'Rainbow Six Siege'.

instance hunie_pop is a game
	name is 'Hunie Pop'.

instance dota_underlords is a game
	name is 'Dota Underlords'.

instance apex_legends is a game
	name is 'Apex Legends'.

instance titan_fall is a game
	name is 'Titan Fall'.

% --- Questions --- %

question platform
'What platform are you gaming on?';
choose one of platform.

question provider
'Are you thinking of playing an exclusive (by game provider)?';
choose one of answer.

question 'which provider'
'Which provider?';
choose one of provider.

question action 
'Do you want an action game?';
choose one of answer.

question 'open world' 
'Do you want an open world game?';
choose one of answer.

question horror 
'Do you want an horror game?';
choose one of answer.

question sports 
'Do you want a sports game?';
choose one of answer.

question racing 
'Do you want a racing game?';
choose one of answer.

question strategy 
'Do you want a strategy game?';
choose one of answer.

question turn 
'Do you want it to be turn based?';
choose one of answer.

question fighting 
'Do you want a fighting game?';
choose one of answer.

question moba
'Do you want to play a MOBA?';
choose one of answer.

question sandbox 
'Do you want a sandbox game?';
choose one of answer.

question 'norse gods' 
'Do you want to fight norse gods?';
choose one of answer.

question giants 
'Do you want to fight giants?';
choose one of answer.

question 'own world' 
'Do you like creating your own world?';
choose one of answer.

question '3d'
'Do you want it 3d?';
choose one of answer.

question fps
'Do you want an FPS?';
choose one of answer.

question realistic
'Do you want a realistic game?';
choose one of answer.

question zombies
'Do you want zombies?';
choose one of answer.

question puzzle
'Do you want a puzzling game?';
choose one of answer.

question simulation
'Do you want a simulation game?';
choose one of answer.

question rpg
'Do you want an RPG?';
choose one of answer.

question interactive
'Do you want an interactive game?';
choose one of answer.

question 'catch them all'
'Do you want "to catch them all"?';
choose one of answer.

question arcade
'Do you want an arcade inspired game?';
choose one of answer.

% --- Rules Platform--- %
rule rPlaystation if
	platform is 'Playstation 4' then
	do ask action and invoke ruleset rules_playstation and include rPlaystation in ruleList.

rule rSwitch if
	platform is 'Nintendo Switch' then
	do ask 'open world' and invoke rules_switch and include rSwitch in ruleList.

rule rPC if
	platform is 'PC' then
	do ask provider and invoke rules_pc and include rPC in ruleList.	

rule rMobile if
	platform is 'Mobile' then
	do ask interactive and invoke rules_mobile and include rMobile in ruleList.

% --- Rules Playstation --- %
rule rPlayAction1 if
	platform is 'Playstation 4' and action is 'Yes' then
	do ask 'open world' and include rPlayAction1 in ruleList.

rule rPlayAction2 if
	platform is 'Playstation 4' and action is 'No' then
	do ask horror and include rPlayAction2 in ruleList.

rule rPlayOpen1 if
	platform is 'Playstation 4' and action is 'Yes' and 'open world' is 'Yes' then
	chosen_game becomes ( 
	if fuzzy_result is below 10 then name of minecraft
	else if fuzzy_result is below 30 then name of spider_man
	else if fuzzy_result is below 60 then name of gta  
	else name of dark_souls  )
	and include rPlayOpen1 in ruleList.

rule rPlayOpen2 if
	platform is 'Playstation 4' and action is 'Yes' and 'open world' is 'No' then
	do ask 'norse gods' and include rPlayOpen2 in ruleList.

rule rPlayHorror1 if
	platform is 'Playstation 4' and action is 'No' and horror is 'Yes' then
	chosen_game becomes (
	if fuzzy_result is below 10 then name of medi_evil
	else if fuzzy_result is below 30 then name of days_gone
	else if fuzzy_result is below 60 then name of until_dawn  
	else name of resident_evil)
	and include rPlayHorror1 in ruleList.	

rule rPlayHorror2 if
	platform is 'Playstation 4' and action is 'No' and horror is 'No' then
	do ask sports and include rPlayHorror2 in ruleList.

rule rPlayNorse1 if
	platform is 'Playstation 4' and action is 'Yes' and 'open world' is 'No' and 'norse gods' is 'Yes' then
	chosen_game becomes (
	if fuzzy_result is below 40 then name of skyrim
	else name of god_of_war )
	and include rPlayNorse1 in ruleList.

rule rPlayNorse2 if
	platform is 'Playstation 4' and action is 'Yes' and 'open world' is 'No' and 'norse gods' is 'No' then
	do ask giants and include rPlayNorse2 in ruleList.

rule rPlaySports2 if
	platform is 'Playstation 4' and action is 'No' and horror is 'No' and sports is 'No' then
	chosen_game becomes ( 
	if fuzzy_result is below 40 then name of journey
	else name of tetris_effect) 
	and include rPlaySports2 in ruleList.
	
rule rPlaySports1 if
	platform is 'Playstation 4'and action is 'No' and horror is 'No' and sports is 'Yes' then
	do ask racing and include rPlaySports1 in ruleList.

rule rPlayGiants1 if
	platform is 'Playstation 4' and action is 'Yes' and 'open world' is 'No' and 'norse gods' is 'No' and giants is 'Yes' then
	chosen_game becomes ( 
	if fuzzy_result is below 40 then name of extinction
	else name of shadow_of_colossus)  and include rPlayGiants1 in ruleList.

rule rPlayGiants2 if
	platform is 'Playstation 4' and action is 'Yes' and 'open world' is 'No' and 'norse gods' is 'No' and giants is 'No' then
	chosen_game becomes ( 
	if fuzzy_result is below 40 then name of uncharted
	else name of horizon_zero_dawn) and include rPlayGiants2 in ruleList.

rule rPlayRacing1 if
	platform is 'Playstation 4' and action is 'No' and horror is 'No' and sports is 'Yes' and racing is 'Yes' then
	chosen_game becomes ( 
	if fuzzy_result is below 30 then name of grand_turismo
	else if fuzzy_result is below 60 then name of assetto_corsa
	else name of project_cars) and include rPlayRacing1 in ruleList.

rule rPlayRacing2 if
	platform is 'Playstation 4' and action is 'No' and horror is 'No' and sports is 'Yes' and racing is 'No' then
	chosen_game becomes ( 
	if fuzzy_result is below 30 then name of fifa
	else if fuzzy_result is below 60 then name of pes
	else name of nba_2k_20) and include rPlayRacing2 in ruleList.

% --- Rules Nintendo Switch --- %
rule rSwitchOpen1 if
	platform is 'Nintendo Switch' and 'open world' is 'Yes' then
	chosen_game becomes ( 
	if fuzzy_result is below 40 then name of mario_odyssey
	else name of legend_of_zelda) and include rSwitchOpen1 in ruleList.

rule rSwitchOpen2 if
	platform is 'Nintendo Switch' and 'open world' is 'No' then
	do ask strategy and include rSwitchOpen2 in ruleList.

rule rSwitchStrategy1 if
	platform is 'Nintendo Switch' and strategy is 'Yes' then
	chosen_game becomes ( 
	if fuzzy_result is below 50 then name of mario_rabbids
	else name of fire_emblem) and include rSwitchStrategy1 in ruleList.

rule rSwitchStrategy2 if
	platform is 'Nintendo Switch' and strategy is 'No' then
	do ask sports and include rSwitchStrategy2 in ruleList.

rule rSwitchSports1 if
	platform is 'Nintendo Switch' and strategy is 'No' and sports is 'No' then
	chosen_game becomes ( 
	if fuzzy_result is below 20 then name of pokemon
	else if fuzzy_result is below 40 then name of captain_toad
	else name of mario_maker) and include rSwitchSports1 in ruleList.

rule rSwitchSports2 if
	platform is 'Nintendo Switch' and strategy is 'No' and sports is 'Yes' then
	do ask racing and include rSwitchSports2 in ruleList.

rule rSwitchRacing1 if
	platform is 'Nintendo Switch' and strategy is 'No' and sports is 'Yes' and racing is 'Yes' then
	chosen_game becomes ( 
	if fuzzy_result is below 40 then name of mario_kart
	else name of table_top) and include rSwitchRacing1 in ruleList.

rule rSwitchRacing2 if
	platform is 'Nintendo Switch' and strategy is 'No' and sports is 'Yes' and racing is 'No' then
	do ask fighting and include rSwitchRacing2 in ruleList.

rule rSwitchFighting1 if
	platform is 'Nintendo Switch' and strategy is 'No' and sports is 'Yes' and racing is 'No' and fighting is 'Yes' then
	chosen_game becomes ( 
	if fuzzy_result is below 40 then name of pokken_tournament
	else name of super_smash_brothers ) and include rSwitchFighting1 in ruleList.

rule rSwitchFighting2 if
	platform is 'Nintendo Switch' and strategy is 'No' and sports is 'Yes' and racing is 'No' and fighting is 'No' then
	chosen_game becomes ( 
	if fuzzy_result is below 20 then name of mario_tennis
	else if fuzzy_result is below 40 then name of mario_sonic
	else if fuzzy_result is below 60 then name of golf_story  
	else name of nba_2k_20 ) and include rSwitchFighting2 in ruleList.

% --- Rules PC --- %
rule rPcProvider1 if
	platform is 'PC' and provider is 'Yes' then
	do ask 'which provider' and include rPcProvider1 in ruleList.

rule rPcProvider2 if
	platform is 'PC' and provider is 'No' then
	do ask moba and include rPcProvider2 in ruleList.

rule rPcProviderSteam if
	platform is 'PC' and provider is 'Yes' and 'which provider' is 'Steam' then
	do ask fps and include rPcProviderSteam in ruleList.

rule rPcProviderOrigin if
	platform is 'PC' and provider is 'Yes' and 'which provider' is 'Origin' then
	do ask fps and include rPcProviderOrigin in ruleList.

rule rPcProviderEpic if
	platform is 'PC' and provider is 'Yes' and 'which provider' is 'Epic Games' then
	chosen_game becomes ( 
	if fuzzy_result is below 40 then name of fortnite
	else name of metro_exodus) and include rPcProviderEpic in ruleList.

rule rPcMoba1 if
	platform is 'PC' and provider is 'No' and moba is 'Yes' then
	chosen_game becomes ( 
	if fuzzy_result is below 40 then name of smite
	else name of lol) and include rPcMoba1 in ruleList.

rule rPcMoba2 if
	platform is 'PC' and provider is 'No' and moba is 'No' then
	do ask strategy and include rPcMoba2 in ruleList.

rule rPcSteamFps1 if
	platform is 'PC' and provider is 'Yes' and 'which provider' is 'Steam' and fps is 'Yes' then
	do ask realistic and include rPcSteamFps1 in ruleList.

rule rPcSteamFps2 if
	platform is 'PC' and provider is 'Yes' and 'which provider' is 'Steam' and fps is 'No' then
	do ask puzzle and include rPcSteamFps2 in ruleList.

rule rPcOriginFps1 if
	platform is 'PC' and provider is 'Yes' and 'which provider' is 'Origin' and fps is 'Yes' then
	do ask realistic and include rPcOriginFps1 in ruleList.

rule rPcOriginFps2 if
	platform is 'PC' and provider is 'Yes' and 'which provider' is 'Origin' and fps is 'No' then
	do ask simulation and include rPcOriginFps2 in ruleList.

rule rPcStrategy1 if
	platform is 'PC' and provider is 'No' and moba is 'No' and strategy is 'Yes' then
	do ask turn and include rPcStrategy1 in ruleList.

rule rPcStrategy2 if
	platform is 'PC' and provider is 'No' and moba is 'No' and strategy is 'No' then
	do ask sandbox and include rPcStrategy2 in ruleList.

rule rPcSteamFpsReal1 if
	platform is 'PC' and provider is 'Yes' and 'which provider' is 'Steam' and fps is 'Yes' and realistic is 'Yes' then
	chosen_game becomes ( 
	if fuzzy_result is below 30 then name of killing_floor
	else if fuzzy_result is below 60 then name of counter_strike
	else name of rainbow_six) and include rPcSteamFpsReal1 in ruleList.

rule rPcSteamFpsReal2 if
	platform is 'PC' and provider is 'Yes' and 'which provider' is 'Steam' and fps is 'Yes' and realistic is 'No' then
	do ask zombies and include rPcSteamFpsReal2 in ruleList.

rule rPcSteamPuzzle1 if
	platform is 'PC' and provider is 'Yes' and 'which provider' is 'Steam' and fps is 'No' and puzzle is 'Yes' then
	chosen_game becomes ( 
	if fuzzy_result is below 50 then name of portal
	else name of hunie_pop) and include rPcSteamPuzzle1 in ruleList.

rule rPcSteamPuzzle2 if
	platform is 'PC' and provider is 'Yes' and 'which provider' is 'Steam' and fps is 'No' and puzzle is 'No' then
	chosen_game becomes ( 
	if fuzzy_result is below 50 then name of dota
	else name of dota_underlords) and include rPcSteamPuzzle2 in ruleList.

rule rPcOriginFpsReal1 if
	platform is 'PC' and provider is 'Yes' and 'which provider' is 'Origin' and fps is 'Yes' and realistic is 'Yes' then
	chosen_game becomes ( 
	if fuzzy_result is below 40 then name of battlefield
	else name of titan_fall) and include rPcOriginFpsReal1 in ruleList.

rule rPcOriginFpsReal2 if
	platform is 'PC' and provider is 'Yes' and 'which provider' is 'Origin' and fps is 'Yes' and realistic is 'No' then
	chosen_game becomes ( 
	if fuzzy_result is below 50 then name of star_wars_battlefront
	else name of apex_legends) and include rPcOriginFpsReal2 in ruleList.
	
rule rPcOriginSimulation1 if
	platform is 'PC' and provider is 'Yes' and 'which provider' is 'Origin' and fps is 'No' and simulation is 'Yes' then
	chosen_game becomes name of the_sims and include rPcOriginSimulation1 in ruleList.

rule rPcOriginSimulation2 if
	platform is 'PC' and provider is 'Yes' and 'which provider' is 'Origin' and fps is 'No' and simulation is 'No' then
	do ask sports and include rPcOriginSimulation2 in ruleList.

rule rPcTurn1 if
	platform is 'PC' and provider is 'No' and moba is 'No' and strategy is 'Yes' and turn is 'No' then
	chosen_game becomes name of starcraft and include rPcTurn1 in ruleList.

rule rPcTurn2 if
	platform is 'PC' and provider is 'No' and moba is 'No' and strategy is 'Yes' and turn is 'Yes' then
	chosen_game becomes name of civilization and include rPcTurn2 in ruleList.

rule rPcSandbox1 if
	platform is 'PC' and provider is 'No' and moba is 'No' and strategy is 'No' and sandbox is 'No' then
	chosen_game becomes name of wow and include rPcSandbox1 in ruleList.

rule rPcSandbox2 if
	platform is 'PC' and provider is 'No' and moba is 'No' and strategy is 'No' and sandbox is 'Yes' then
	do ask 'own world' and include rPcSandbox2 in ruleList.

rule rPcSteamZombie1 if
	platform is 'PC' and provider is 'Yes' and 'which provider' is 'Steam' and fps is 'Yes' and realistic is 'No' and zombies is 'Yes' then
	chosen_game becomes name of left4dead and include rPcSteamZombie1 in ruleList.

rule rPcSteamZombie2 if
	platform is 'PC' and provider is 'Yes' and 'which provider' is 'Steam' and fps is 'Yes' and realistic is 'No' and zombies is 'No' then
	chosen_game becomes name of team_fortress and include rPcSteamZombie2 in ruleList.

rule rPcOriginSports1 if
	platform is 'PC' and provider is 'Yes' and 'which provider' is 'Origin' and fps is 'No' and simulation is 'No' and sports is 'Yes' then
	chosen_game becomes name of fifa and include rPcOriginSports1 in ruleList.

rule rPcOriginSports2 if
	platform is 'PC' and provider is 'Yes' and 'which provider' is 'Origin' and fps is 'No' and simulation is 'No' and sports is 'No' then
	do ask rpg and include rPcOriginSports2 in ruleList.

rule rPcOwnWorld1 if
	platform is 'PC' and provider is 'No' and moba is 'No' and strategy is 'No' and sandbox is 'Yes' and 'own world' is 'No' then
	chosen_game and include rPcOwnWorld1 in ruleList.

rule rPcOwnWorld2 if
	platform is 'PC' and provider is 'No' and moba is 'No' and strategy is 'No' and sandbox is 'Yes' and 'own world' is 'Yes' then
	do ask '3d' and include rPcOwnWorld2 in ruleList.

rule rPcOriginRPG1 if
	platform is 'PC' and provider is 'Yes' and 'which provider' is 'Origin' and fps is 'No' and simulation is 'No' and sports is 'No' and rpg is 'Yes' then
	chosen_game becomes name of dragon_age and include rPcOriginRPG1 in ruleList.

rule rPcOriginRPG2 if
	platform is 'PC' and provider is 'Yes' and 'which provider' is 'Origin' and fps is 'No' and simulation is 'No' and sports is 'No' and rpg is 'No' then
	chosen_game becomes name of command_conquer and include rPcOriginRPG1 in ruleList.

rule rPc3D1 if
	platform is 'PC' and provider is 'No' and moba is 'No' and strategy is 'No' and sandbox is 'Yes' and 'own world' is 'Yes' and '3d' is 'Yes' then
	chosen_game becomes name of terraria and include rPc3D1 in ruleList.

rule rPc3D2 if
	platform is 'PC' and provider is 'No' and moba is 'No' and strategy is 'No' and sandbox is 'Yes' and 'own world' is 'Yes' and '3d' is 'No' then
	chosen_game becomes name of minecraft and include rPc3D2 in ruleList.

% --- Rules Mobile --- %
rule rMobileInteractive1 if
	platform is 'Mobile' and interactive is 'Yes' then
	do ask 'catch them all' and include rMobileInteractive1 in ruleList.

rule rMobileInteractive2 if
	platform is 'Mobile' and interactive is 'No' then
	do ask racing and include rMobileInteractive2 in ruleList.

rule rMobileCatch1 if
	platform is 'Mobile' and interactive is 'Yes' and 'catch them all' is 'Yes' then
	chosen_game becomes name of pokemon_go and include rMobileCatch1 in ruleList.

rule rMobileCatch2 if
	platform is 'Mobile' and interactive is 'Yes' and 'catch them all' is 'No' then
	chosen_game becomes name of minecraft_earth and include rMobileCatch2 in ruleList.

rule rMobileRacing1 if
	platform is 'Mobile' and interactive is 'No' and racing is 'No' then
	chosen_game becomes name of clash_royale and include rMobileRacing1 in ruleList.

rule rMobileRacing2 if
	platform is 'Mobile' and interactive is 'No' and racing is 'Yes' then
	do ask arcade and include rMobileRacing2 in ruleList.

rule rMobileArcade1 if
	platform is 'Mobile' and interactive is 'No' and racing is 'Yes' and arcade is 'Yes' then
	chosen_game becomes name of asphalt and include rMobileArcade1 in ruleList.

rule rMobileArcade2 if
	platform is 'Mobile' and interactive is 'No' and racing is 'Yes' and arcade is 'No' then
	chosen_game becomes name of real_racing and include rMobileArcade2 in ruleList.

ruleset platform_rules
	contains rPlaystation,rSwitch,rPC,rMobile;
	initiate by doing chosen_game becomes unknown;
	terminate when platform is different from unknown;
	update ruleset by removing each selected rule.

ruleset rules_playstation
	contains rPlayAction1,rPlayAction2,rPlayOpen1,rPlayOpen2,rPlayHorror1,rPlayHorror2,rPlayNorse1,rPlayNorse2,rPlaySports2,rPlaySports1,rPlayGiants1,rPlayGiants2,rPlayRacing1,rPlayRacing2;
	terminate when chosen_game is different from unknown;
	update ruleset by removing each selected rule.

ruleset rules_switch
	contains rSwitchOpen1,rSwitchOpen2,rSwitchStrategy1,rSwitchStrategy2,rSwitchSports1,rSwitchSports2,rSwitchRacing1,rSwitchRacing2,rSwitchFighting1,rSwitchFighting2;
	terminate when chosen_game is different from unknown;
	update ruleset by removing each selected rule.

ruleset rules_pc
	contains rPcProvider1,rPcProvider2,rPcProviderSteam,rPcProviderOrigin,rPcProviderEpic,rPcMoba1,rPcMoba2,rPcSteamFps1,rPcSteamFps2,rPcOriginFps1,rPcOriginFps2,rPcStrategy1,rPcStrategy2,rPcSteamFpsReal1,rPcSteamFpsReal2,rPcSteamPuzzle1,rPcSteamPuzzle2,rPcOriginFpsReal1,rPcOriginFpsReal2,rPcOriginSimulation1,rPcOriginSimulation2,rPcTurn1,rPcTurn2,rPcSandbox1,rPcSandbox2,rPcSteamZombie1,rPcSteamZombie2,rPcOriginSports1,rPcOriginSports2,rPcOwnWorld1,rPcOwnWorld2,rPcOriginRPG1,rPcOriginRPG2,rPc3D1,rPc3D2;
	terminate when chosen_game is different from unknown;
	update ruleset by removing each selected rule.

ruleset rules_mobile
	contains rMobileInteractive1,rMobileInteractive2,rMobileCatch1,rMobileCatch2,rMobileRacing1,rMobileRacing2,rMobileArcade1,rMobileArcade2;
	terminate when chosen_game is different from unknown;
	update ruleset by removing each selected rule.

do consult('modified_ficha_5.pl').
do consult('explainhow.pl').
do consult('explainwhynot.pl').

%FE age_group edited at 21:58:58 on 7/1/2020
fuzzy_variable age_group ;
   ranges from 0 to  90 ; 
   fuzzy_set child is \ shaped and linear at 0, 14 ; 
   fuzzy_set teenager is /\ shaped and linear at 12, 16, 20 ; 
   fuzzy_set young_adult is /\ shaped and linear at 18, 27, 36 ; 
   fuzzy_set adult is /\ shaped and linear at 30, 45, 60 ; 
   fuzzy_set senior is /\ shaped and linear at 50, 65, 80 ; 
   fuzzy_set elder is / shaped and linear at 65, 90 ; 
   defuzzify using 
      all memberships
       and mirror rule
       and shrinking . 

%FE difficulty created at 22:38:37 on 7/1/2020
fuzzy_variable difficulty ;
   ranges from 0 to  100 ; 
   fuzzy_set easy is \ shaped and linear at 0, 30 ; 
   fuzzy_set medium is /\ shaped and linear at 20, 35, 55 ; 
   fuzzy_set hard is /\ shaped and linear at 45, 60, 80 ; 
   fuzzy_set insane is / shaped and linear at 70, 100 ; 
   defuzzify using 
      all memberships
       and mirror rule
       and shrinking . 

%FE game_group edited at 23:47:38 on 7/1/2020
fuzzy_variable game_group ;
   ranges from 0 to  100 ; 
   fuzzy_set begginer is \ shaped and linear at 10, 30 ; 
   fuzzy_set casual is /\ shaped and linear at 14, 37, 60 ; 
   fuzzy_set intermediate is /\ shaped and linear at 42, 61, 81 ; 
   fuzzy_set hardcore is / shaped and linear at 71, 88 ; 
   defuzzify using 
      all memberships
       and mirror rule
       and shrinking . 



fuzzy_matrix game_classification age_group * difficulty -> game_group ;
child * easy -> begginer;
child * medium -> begginer; 
child * hard -> casual;
child * insane -> casual; 
teenager * easy -> begginer;
teenager * medium -> casual;
teenager * hard -> intermediate;
teenager * insane -> hardcore;
young_adult * easy -> casual;
young_adult * medium -> intermediate;
young_adult * hard -> hardcore;
young_adult * insane -> hardcore;
adult * easy -> casual;
adult * medium -> intermediate;
adult * hard -> intermediate;
adult * insane -> hardcore;senior * easy -> begginer;
senior * medium -> begginer; 
senior * hard -> casual;
senior * insane -> hardcore;
elder  * easy -> begginer;
elder * medium -> begginer; 
elder * hard -> casual;
elder * insane -> intermediate .


question age
	'How old are you?';
	input integer.

question q_difficulty
	'Choose, from 0 to 100 the game difficulty you are looking for.';
	input integer.	


action classification(GRP); 
	do
	restart
	and uncertainty_trace 
	and check that Age is age 
	and check that Diff is q_difficulty 
	and reset all fuzzy values
  	and fuzzify the age_group from Age
  	and fuzzify the difficulty from Diff
  	and propagate game_classification fuzzy rules
  	and defuzzify the game_group to GRP.

action run do
	restart and
	do classification(GRP) and
	fuzzy_result becomes GRP and
	invoke ruleset platform_rules and
	lista_evidencias(LEvid) and
	formata_msg(chosen_game, LEvid, Msg) and
	msgbox('Chosen game', Msg, 0, _) and
	explainHow(ruleList) and
	explainWhyNot.

	



